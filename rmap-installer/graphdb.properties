####### PATHS AND DIRECTORIES ######
#
# GraphDB home directory. Defines the parent location of data, configuration and logs
# unless the location for a specific functionality has been overridden by its corresponding property.
# The default is the same as the GraphDB distribution directory (if running as a standalone application)
# or an OS-specific directory under the user's home directory (if running as a deployed war file).
# The actual values for graphdb.home and the other graphdb.home.xxx properties will be printed in the log
# when GraphDB starts.
#
graphdb.home = /rmap/graphdb
#
#
# GraphDB data directory. Defines the directory for repository data.
# This directory must be writable by the GraphDB process (or Tomcat/Jetty if running as a war file).
# The default is ${graphdb.home}/data.
#
# graphdb.home.data =
#
#
# GraphDB logs directory. Defines the directory for the log files.
# The default is ${graphdb.home}/logs if running in standalone mode,
# or a dedicated directory under Tomcat/Jetty's log directory.
#
# graphdb.home.logs =
#
#
# GraphDB configuration directory. Used for user-editable configuration (including this file).
# This directory and all files within it may be read-only as GraphDB will not change them.
# The default is ${graphdb.home}/conf.
#
# Since the location if this config file depends on this property, it does not make sense to set it here.
# Instead you can provide is a system property with -D.
#
# graphdb.home.conf =
#
#
# GraphDB work directory. Used for non-user-editable configuration.
# This directory must be writable by the GraphDB process (or Tomcat/Jetty if running as a war file).
# The default is ${graphdb.home}/work.
#
# graphdb.home.work =
#
#
# Graphdb global page cache memory parameter. By default the page cache will
# take 50% of the max memory for the JVM process. You can of course specify the
# page cache size explicitly.
#
# graphdb.page.cache.size=10G


###### ENGINE OVERRIDE ######
#
# The GraphDB Engine can be configured through a set of properties that start with the graphdb.engine. prefix.
# These properties correspond to the properties that can be set when creating a repository through the Workbench
# or through a .ttl file.
#
# Note that properties defined here WILL OVERRIDE the properties for each repository, regardless of whether you created
# the repository before or after you set the global value of an engine property. As such, the global overrides
# should be used only in specific cases while for normal everyday needs you should set the corresponding properties
# when you create a repository.
#
# A well-established specific use-case is changing the Entity Pool implementation for the whole installation.
# The default value is "classic". Other implementations are "transactional-simple" and "transactional",
# which is the same as "transactional-simple" for this version of GraphDB.
#
# graphdb.engine.entity-pool-implementation = classic
#
#
# Other properties:
#
# graphdb.engine.<property> = xxx
